  var rCmds = newMenu("ROI Menu Tool", 
      newArray("Set Default Group...", "Set Default Stroke Width...", "-", 
      "Set Group of Selected ROIs", "Select Group", "Multi-crop", "-", "Properties..." , "Install Keypad Shortcuts") );

  macro "ROI Menu Tool - C037T0d15RT8c12oTfc12i" {
      cmd = getArgument();
      if (cmd=="Set Default Group...")
          setDefaultRoiGroup();
      else if (cmd=="Set Default Stroke Width...")
          setDefaultRoiStrokeWidth();
      else if (cmd=="Set Group of Selected ROIs")
          setRoiGroup();       
      else if (cmd=="Select Group")
          selectRoiGroup();
      else if (cmd=="Multi-crop")
          multiCrop_Dialog();
      else if (cmd=="Properties...")
          properties();
      else if (cmd=="Install Keypad Shortcuts")
          call("ij.plugin.MacroInstaller.installFromJar", "/macros/RoiMenuTool.txt+");
  }

  // Numeric keypad shortcuts used to set the default ROI group
 macro "Keypad shortcuts for setting default group" { }
  macro "Group 0 (none) [n0]" { npad(0); }
  macro "Group 1 [n1]" { npad(1); }
  macro "Group 2 [n2]" { npad(2); }
  macro "Group 3 [n3]" { npad(3); }
  macro "Group 4 [n4]" { npad(4); }
  macro "Group 5 [n5]" { npad(5); }
  macro "Group 6 [n6]" { npad(6); }
  macro "Group 7 [n7]" { npad(7); }
  macro "Group 8 [n8]" { npad(8); }
  macro "Group 9 [n9]" { npad(9); }

  function npad(digit) {
      Roi.setDefaultGroup(digit);
  }

  function properties() {
     if (selectionType==-1) {
        showMessage("Selection required");
        exit;
     }
     run("Properties... ");
  }

  function setDefaultRoiGroup() {
     group = Roi.getDefaultGroup;
     Dialog.create("Set Default Group");
     Dialog.addNumber("Default group", group);
     Dialog.show;
     group = Dialog.getNumber();
     Roi.setDefaultGroup(group);
     call("ij.plugin.frame.Recorder.recordString", "Roi.setDefaultGroup("+group+");\n");
  }

  function setDefaultRoiStrokeWidth() {
     width = Roi.getDefaultStrokeWidth;
     Dialog.create("Set Default Stroke Width");
     Dialog.addNumber("Default stroke width", width);
     Dialog.show;
     width = Dialog.getNumber();
     Roi.setDefaultStrokeWidth(width);
     call("ij.plugin.frame.Recorder.recordString", "Roi.setDefaultStrokeWidth("+width+");\n");
  }

  function setRoiGroup() {
     Dialog.create("Set Group");
     Dialog.addString("Group", "1");
     Dialog.show;
     group = Dialog.getString();
     RoiManager.setGroup(group);
     if (call("ij.plugin.frame.Recorder.scriptMode")=="true")
        call("ij.plugin.frame.Recorder.recordString", "rm.setGroup("+group+");\n");
     else
        call("ij.plugin.frame.Recorder.recordString", "RoiManager.setGroup("+group+");\n");
 }

  function selectRoiGroup() {
     Dialog.create("Select group");
     Dialog.addString("Group", "0");
     Dialog.show;
     group = Dialog.getString();
     RoiManager.selectGroup(group);
     if (call("ij.plugin.frame.Recorder.scriptMode")=="true")
        call("ij.plugin.frame.Recorder.recordString", "rm.selectGroup("+group+");\n");
     else
        call("ij.plugin.frame.Recorder.recordString", "RoiManager.selectGroup("+group+");\n");
  }


 function multiCrop_Dialog(){
 	image = getImageID();
 	n = nSlices();
	
	Dialog.create("ROI multiCrop");
	
	if (n>1) Dialog.addChoice("Crop stack to a", newArray("slice", "stack"));
	
	Dialog.addChoice("Choose output", newArray("show", "save", "both"));
	Dialog.addChoice("Output image format (if saving)", newArray("tif", "jpg", "gif", "raw", "bmp", "png"));	
	Dialog.show();
	
	// RECOVER CHOICES
	// 1) crop mode for stacks
	if (n>1)
		mode = Dialog.getChoice();
	else
		mode = "slice";
	
	// 2) output type and 3) image file extension for saving
	output    = Dialog.getChoice(); 
	extension = Dialog.getChoice();
	
	// Ask output directory where to save images
	if ((output=="save") || (output=="both"))
		outDir = getDirectory("Select output directory");
	else
		outDir = "";
	
	RoiManager.multiCrop(mode, output, outDir, extension);
	if (call("ij.plugin.frame.Recorder.scriptMode")=="true")
        call("ij.plugin.frame.Recorder.recordString", "rm.multiCrop(imp,'" + mode + "');\n");
    else
        call("ij.plugin.frame.Recorder.recordString", "RoiManager.multiCrop('" + mode + "','" + output + "','" + outDir + "','" + extension + "');\n");
	
	
 }